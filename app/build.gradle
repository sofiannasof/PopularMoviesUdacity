apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.popularmovies.udacity.android.popularmoviesudacity"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        buildConfigField("String", "THE_MOVIE_DB_API_KEY", MY_MOVIE_DB_API_KEY)
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

ext {
    supportLibrary = "25.1.0"
    picasso = "2.5.2"
    retrofit = "1.9.+"
    okhttp = "2.4.0"
    rxjava = "1.2.4"
    rxandroid = "1.2.1"
    dagger = "2.0.1"
    annotation = "10.0-b28"
    junit = "4.12"
    espresso = "2.2.2"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile("com.android.support.test.espresso:espresso-core:${espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:${supportLibrary}"
    compile "com.android.support:design:${supportLibrary}"
    compile "com.android.support:recyclerview-v7:${supportLibrary}"
    compile "com.android.support:cardview-v7:${supportLibrary}"

    // Picasso
    compile "com.squareup.picasso:picasso:${picasso}"
    // Retrofit
    compile "com.squareup.retrofit:retrofit:${retrofit}"
    // OkHttp
    compile "com.squareup.okhttp:okhttp:${okhttp}"
    compile "com.squareup.okhttp:okhttp-urlconnection:${okhttp}"
    // Rx
    compile "io.reactivex:rxjava:${rxjava}"
    compile "io.reactivex:rxandroid:${rxandroid}"
    // Dagger
    compile "com.google.dagger:dagger:${dagger}"
    apt "com.google.dagger:dagger-compiler:${dagger}"
    compile "org.glassfish:javax.annotation:${annotation}"

    testCompile "junit:junit:${junit}"
}
